% Copied and modified from the standard library.

@require: math

module BNF : sig
  direct +BNF : [string; math; (math list) list] block-cmd
  direct \BNF : [string; math; (math list) list] inline-cmd
  direct \BNFs : [(string * math * (math list) list) list] inline-cmd
end = struct

  let insert-bars mlst =
    Math.join ${\mid} mlst


  let tabular-of-math ctx label mnontm mlstlst =
    let sz = get-font-size ctx in
    let vpad = sz *' 0.25 in
    let padsL = (0pt, sz *' 0.5, vpad, vpad) in
    let padsR = (0pt, 0pt, vpad, vpad) in
      mlstlst |> List.fold-lefti (fun i acc mlst -> (
        let c0 =
          if i == 0 then
            NormalCell(padsL, embed-math ctx ${#mnontm \mathrel{: : =}})
          else
            NormalCell(padsL, inline-fil ++ embed-math ctx ${\mid})
        in
        let ib = embed-math ctx (insert-bars mlst) ++ inline-fil in
        let ibl = embed-string label |> read-inline ctx in
        let xs =
          if i == 0 then
            [NormalCell((30pt, 0pt, 0pt, 0pt), ibl)]
          else
            []
        in
        List.append [c0; NormalCell(padsR, ib)] xs :: acc
      )) [] |> List.reverse


  let-block ctx +BNF label mnontm mlstlst =
    let celllstlst = tabular-of-math ctx label mnontm mlstlst in
    let ib = tabular celllstlst (fun _ _ -> []) in
    let vp = get-font-size ctx *' 1. in
      line-break true true (ctx |> set-paragraph-margin vp vp)
          (inline-fil ++ ib ++ inline-fil)


  let-inline ctx \BNF label mnontm mlstlst =
    inline-fil ++
      embed-block-breakable ctx (read-block ctx '<+BNF(label)(mnontm)(mlstlst);>)


  let-inline ctx \BNFs lst =
    let cllall =
      lst |> List.fold-left (fun cllacc (label, mnontm, mlstlst) -> (
        let cll = tabular-of-math ctx label mnontm mlstlst in
          List.append cllacc cll
      )) []
    in
    let ib = tabular cllall (fun _ _ -> []) in
    let vp = get-font-size ctx *' 1.5 in
    let bb =
      line-break true true (ctx |> set-paragraph-margin vp vp)
        (inline-fil ++ ib ++ inline-fil)
    in
      inline-fil ++ embed-block-breakable ctx bb

end
